         MACRO                                         STRUCT MACRO SET
&LABEL   ELSEIF &A,&REL,&B,&THEN
.**********************************************************************
.*COPYRIGHT GESELLSCHAFT FUER MATHEMATIK UNF DATENVERARBEITUNG MBH 1985
.*LICENSED MATERIAL --- PROGRAM PROPERTY OF GMD-Z1.BN
.**********************************************************************
.*                                            PAHL (GMD-IST/RZ) 00JAN73
.*      " CONDITION "THEN" BLOCK "ELSE" BLOCK "IF)"             27MAR75
.*       END "THEN" PART OF "IF" CLAUSE,
.*       BEGIN "ELSE" PART OF "IF" CLAUSE.
.*  "(IF" CONDITION "THEN" BLOCK <"ELSE" BLOCK> "IF)"           27MAR75
.*       BEGIN "IF" CLAUSE,
.*       EVALUATE CONDITIONAL EXPRESSION,
.*       BEGIN "THEN" PART OF "IF" CLAUSE.
.*
.*  &A,&REL,&B  COMPRISES THE CONDITIONAL EXPRESSION, LEAVING TRUE OR
.*       FALSE.  WHAT IS A LEGAL CONDITION, IS DEFINED IN MACRO IF0CE.
.*
.*
         GBLA  &BLK,&BLKDCNT(30),&BLKCC(30)
         GBLC  &BLKTYPE(30),&BLKID(30),&BLKNAME(30)
         GBLA  &SPTSNDX
         LCLC  &T,&C
&LABEL   SASLIST MACRO,'ELSEIF'
.*
&C       SETC  '&BLKID(&BLK)'
         AIF   ('&BLKTYPE(&BLK)' NE 'IT').YELSE       NO "THEN"
@@Y&C      DS    0H
   IF0BC 15,@@Z&C,(@@X&C-@@V&C)*(@@Y&C-@@W&C) JUMP AROUND "ELSE" PART
.*    IF0BC    15,@@Z&C                       JUMP AROUND "ELSE" PART
         AIF   ('&LABEL' EQ '').NOLABEL
&LABEL   DS    0S(&LABEL)
.NOLABEL AIF   ('&BLKNAME(&BLK)' EQ '').NOXREF
         DS    0S(&BLKNAME(&BLK))
.NOXREF  ANOP
@@V&C      DS    0H
&BLKTYPE(&BLK) SETC 'I '               BEING IN CONDITION PART OF "IF"
           SPTSNDX IF
@@X&C      EQU   @@X&SPTSNDX.IF
@@Z&C      EQU   @@Z&SPTSNDX.IF
@@F&C      EQU   @@Z&C-(@@X&C-@@V&C)/(@@X&C-@@V&C)*(@@Z&C-@@V&C)
@@A&BLKID(&BLK)  DS  0H
.*
.*  EVALUATE CONDITIONAL EXPRESSION
.*
.GO      AIF   ('&A&REL&B' NE '').IF0CE
         AGO  .MEND
.IF0CE   IF0CE &A,&REL,&B
&BLKTYPE(&BLK) SETC 'IX'               BEING IN CONDITION PART OF "IF"
.*
.*  SEE WHAT TO BE DONE AFTER COMPARISON
.*
         AIF   ('&THEN' EQ '').MEND
.*
.*  "THEN"
.*
         AIF   ('&THEN' NE 'THEN').OR
         THEN  ,
         AGO  .MEND
.*
.*  "OR CONDITION,..."
.*
.OR      AIF   ('&THEN' NE '$OR$' AND '&THEN' NE 'OR'                  -
               AND '&THEN' NE 'ORELSE').AND
         ORELSE  &SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8)
         AGO  .MEND
.*
.*  "AND CONDITION,..."
.*
.AND     AIF   ('&THEN' NE '$AND$' AND '&THEN' NE 'AND'                -
               AND '&THEN' NE 'ANDTHEN').YTHEN
         ANDTHEN &SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&SYSLIST(8)
         AGO  .MEND
.**********************************************************************
.YELSE   MNOTE 12,'****** ELSEIF: NOT EXPECTED.  IGNORED.'
         AGO  .MEND
.YTHEN   MNOTE 08,'****** ELSEIF: ASSUMED "THEN" INSTEAD OF INVALID "&T-
               HEN".'
         THEN ,
.MEND    SASLIST MACEND
         MEND
